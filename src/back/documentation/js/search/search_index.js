var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.411,1,2.186]],["body/controllers/AppController.html",[0,2.104,1,3.26,2,1.622,3,0.398,4,0.354,5,0.354,6,3.215,7,0.594,8,1.949,9,4.896,10,2.814,11,0.028,12,0.893,13,3.825,14,1.503,15,1.679,16,0.991,17,0.764,18,2.986,19,3.215,20,0.398,21,0.049,22,2.275,23,2.275,24,1.622,25,3.825,26,0.021,27,0.021]],["title/modules/AppModule.html",[28,1.307,29,2.186]],["body/modules/AppModule.html",[1,3.192,2,1.783,3,0.312,4,0.277,5,0.277,11,0.028,16,1.149,17,0.598,18,3.121,19,2.516,20,0.312,21,0.039,26,0.018,27,0.018,28,1.651,29,4.164,30,1.373,31,1.928,32,2.516,33,2.516,34,2.516,35,3.421,36,3.421,37,2.44,38,2.28,39,1.624,40,1.624,41,2.993,42,2.499,43,3.092,44,2.993,45,2.993,46,1.967,47,1.49,48,1.78,49,2.993]],["title/injectables/AppService.html",[18,1.805,50,0.665]],["body/injectables/AppService.html",[3,0.425,4,0.378,5,0.378,7,0.633,8,2.031,9,5.015,11,0.028,12,0.953,14,1.603,15,1.75,16,0.815,17,0.815,18,2.804,20,0.425,21,0.053,24,1.73,26,0.022,27,0.022,50,1.033,51,1.603,52,3.429,53,4.079,54,4.079,55,4.079]],["title/controllers/AuthController.html",[0,1.411,56,2.186]],["body/controllers/AuthController.html",[0,1.078,2,1.078,3,0.265,4,0.235,5,0.235,7,0.394,8,1.468,10,2.749,11,0.028,12,0.873,14,1.468,16,1.153,17,0.508,20,0.265,21,0.033,23,2.222,24,1.585,26,0.016,27,0.016,56,2.456,57,2.137,58,1.87,59,2.542,60,2.206,61,3.141,62,3.141,63,2.137,64,3.052,65,2.542,66,2.542,67,1.715,68,1.362,69,0.808,70,1.715,71,1.512,72,2.137,73,2.953,74,3.737,75,2.542,76,2.137,77,1.87,78,1.87,79,1.87,80,2.137,81,2.206,82,1.87,83,1.671,84,2.542,85,2.749,86,2.137,87,1.87,88,1.88,89,1.87,90,1.379,91,2.542,92,1.87,93,1.87,94,1.266,95,2.542,96,1.379,97,2.749,98,2.542,99,2.542,100,2.542,101,2.137,102,2.542,103,2.542,104,2.542]],["title/modules/AuthModule.html",[28,1.307,35,1.978]],["body/modules/AuthModule.html",[2,1.603,3,0.269,4,0.239,5,0.239,11,0.028,16,1.182,17,0.516,20,0.269,21,0.033,26,0.016,27,0.016,28,1.485,30,1.184,31,1.734,35,3.7,38,2.05,39,1.4,40,1.4,42,2.247,43,2.78,56,2.938,81,3.068,82,1.899,94,1.285,105,2.17,106,2.17,107,2.17,108,2.17,109,2.969,110,3.254,111,3.254,112,2.581,113,2.78,114,2.17,115,3.779,116,2.581,117,1.899,118,1.696,119,2.17,120,2.581,121,2.581,122,2.581,123,2.581,124,2.17,125,2.17,126,2.581,127,2.581,128,2.581]],["title/injectables/AuthService.html",[50,0.665,81,1.656]],["body/injectables/AuthService.html",[3,0.2,4,0.178,5,0.178,7,0.299,8,1.189,11,0.028,12,0.989,14,1.468,15,1.654,16,0.976,17,0.385,20,0.2,21,0.025,24,1.952,26,0.013,27,0.013,50,0.604,51,0.757,60,2.71,61,2.543,62,2.543,63,2.543,64,2.497,67,1.943,68,1.543,69,0.915,70,1.943,71,1.799,72,2.543,73,2.65,81,1.506,86,1.618,87,1.416,88,2.072,89,1.416,92,1.416,96,1.641,97,2.225,101,1.618,117,1.416,129,1.618,130,3.025,131,1.925,132,5.109,133,1.925,134,1.925,135,1.925,136,3.025,137,3.736,138,1.925,139,1.388,140,1.988,141,1.618,142,1.925,143,2.543,144,3.024,145,2.167,146,2.905,147,1.618,148,1.618,149,1.925,150,1.925,151,1.925,152,3.736,153,1.925,154,1.506,155,1.925,156,1.618,157,1.925,158,1.925,159,1.925,160,1.925,161,1.925,162,3.025,163,1.925,164,1.925,165,1.925,166,1.925]],["title/classes/BankAccount.html",[21,0.043,167,2.186]],["body/classes/BankAccount.html",[3,0.392,4,0.348,5,0.348,7,0.584,11,0.027,12,1.275,15,1.661,20,0.392,21,0.049,26,0.021,27,0.021,69,1.181,167,3.224,168,1.595,169,2.881,170,4.864,171,3.162,172,2.081,173,4.59,174,4.59,175,4.59,176,4.864,177,3.761,178,3.761,179,3.761]],["title/controllers/BankAccountController.html",[0,1.411,180,2.186]],["body/controllers/BankAccountController.html",[0,1.586,2,1.586,3,0.389,4,0.346,5,0.346,11,0.028,16,1.154,17,0.747,20,0.389,21,0.048,22,2.224,23,2.224,26,0.021,27,0.021,47,2.711,48,2.224,58,2.752,77,2.752,78,2.752,79,2.752,85,2.752,90,2.029,169,1.862,180,3.213,181,3.144,182,4.109,183,2.954,184,3.144,185,2.029,186,2.752,187,2.752,188,3.144,189,3.74]],["title/modules/BankAccountModule.html",[28,1.307,36,1.978]],["body/modules/BankAccountModule.html",[2,1.846,3,0.328,4,0.291,5,0.291,11,0.028,16,1.129,17,0.629,20,0.328,21,0.041,26,0.018,27,0.018,28,1.71,30,1.444,31,1.997,36,3.731,38,2.361,39,1.707,40,1.707,42,2.588,43,3.201,47,2.167,48,1.871,109,3.17,114,2.645,169,1.567,180,3.279,183,3.17,184,2.645,190,2.645,191,2.645,192,2.645,193,3.475,194,3.147,195,3.147,196,3.147]],["title/injectables/BankAccountService.html",[50,0.665,183,1.805]],["body/injectables/BankAccountService.html",[3,0.2,4,0.178,5,0.178,7,0.299,8,1.189,11,0.028,12,0.989,14,1.468,16,1.021,17,0.385,20,0.2,21,0.025,23,1.799,24,1.585,26,0.013,27,0.013,37,1.796,46,1.265,47,1.506,48,2.736,50,0.604,51,0.757,60,2.71,67,1.943,68,1.543,69,0.915,70,1.943,71,1.145,88,2.167,89,1.416,96,1.641,97,2.225,140,2.783,144,1.265,145,1.283,146,1.799,147,1.618,167,1.265,169,2.291,173,1.618,174,1.618,182,1.618,183,1.641,185,2.497,186,1.416,187,2.225,197,1.618,198,2.225,199,2.543,200,3.141,201,1.618,202,1.925,203,2.456,204,2.543,205,3.736,206,1.925,207,2.543,208,3.025,209,1.925,210,1.925,211,3.736,212,1.925,213,3.736,214,1.265,215,1.925,216,3.025,217,1.265,218,1.618,219,1.145,220,1.925,221,1.925,222,1.925,223,1.145,224,1.925,225,1.618,226,1.618,227,1.925,228,1.925,229,3.025,230,1.925,231,1.925,232,1.925,233,1.925,234,3.025,235,2.225,236,1.925,237,1.618,238,1.925,239,1.925,240,1.145]],["title/classes/CreateBankAccountDto.html",[21,0.043,185,1.805]],["body/classes/CreateBankAccountDto.html",[3,0.441,4,0.392,5,0.392,7,0.657,11,0.026,12,0.989,15,1.791,20,0.441,21,0.055,26,0.022,27,0.022,47,2.634,69,0.915,168,1.796,169,2.634,172,2.244,175,4.851,185,2.87,241,4.447,242,3.114,243,4.233]],["title/classes/CreateUserDto.html",[21,0.043,73,1.805]],["body/classes/CreateUserDto.html",[3,0.312,4,0.277,5,0.277,7,0.464,11,0.027,12,1.408,15,2.102,20,0.312,21,0.039,26,0.018,27,0.018,68,1.771,69,1.304,73,2.28,139,2.229,154,2.418,168,1.27,172,1.783,223,2.888,244,5.152,245,2.516,246,3.573,247,3.192,248,4.083,249,4.857,250,4.427,251,2.993,252,2.993,253,2.993,254,2.993,255,2.993,256,3.533,257,2.993,258,2.993,259,2.993]],["title/injectables/JwtAuthGuard.html",[50,0.665,90,1.805]],["body/injectables/JwtAuthGuard.html",[3,0.455,4,0.405,5,0.405,11,0.028,16,1.078,17,0.873,20,0.455,21,0.056,26,0.023,27,0.023,50,1.078,51,1.717,90,2.928,93,3.215,94,2.176,260,3.674,261,3.215,262,2.371,263,4.37]],["title/injectables/JwtStrategy.html",[50,0.665,110,1.978]],["body/injectables/JwtStrategy.html",[3,0.325,4,0.289,5,0.289,7,0.484,8,1.699,11,0.028,12,1.01,14,1.225,16,1.125,17,0.623,20,0.325,21,0.04,24,1.322,26,0.018,27,0.018,50,0.864,51,1.225,60,2.472,64,1.692,67,1.431,68,1.137,69,0.674,70,1.431,71,1.854,92,2.294,94,1.552,96,2.693,110,2.571,118,2.049,119,2.621,125,2.621,219,1.854,262,1.692,264,2.621,265,3.635,266,3.118,267,4.324,268,3.118,269,3.118,270,3.118,271,2.621,272,2.621,273,2.621,274,2.621,275,2.621,276,3.118,277,3.118,278,3.118,279,3.118,280,3.118,281,3.118,282,3.118,283,3.118,284,3.118]],["title/injectables/LocalAuthGuard.html",[50,0.665,83,2.186]],["body/injectables/LocalAuthGuard.html",[3,0.455,4,0.405,5,0.405,11,0.028,16,1.078,17,0.873,20,0.455,21,0.056,26,0.023,27,0.023,50,1.078,51,1.717,83,3.547,93,3.215,94,2.176,261,3.215,262,2.371,285,3.674,286,4.37]],["title/injectables/LocalStrategy.html",[50,0.665,111,1.978]],["body/injectables/LocalStrategy.html",[3,0.304,4,0.27,5,0.27,7,0.452,8,1.621,11,0.028,12,0.964,14,1.146,15,1.931,16,1.04,17,0.583,20,0.304,21,0.038,22,1.734,24,1.237,26,0.018,27,0.018,50,0.824,51,1.146,60,2.384,67,1.893,68,1.504,69,0.892,70,1.893,81,2.84,82,2.145,94,1.452,96,1.582,111,2.453,139,1.338,140,2.712,144,1.916,145,2.031,146,1.734,154,2.592,219,1.734,240,1.734,262,1.582,265,3.468,271,2.451,273,2.451,274,2.451,275,2.451,287,2.451,288,2.916,289,2.916,290,4.126,291,2.916,292,2.451,293,4.126,294,2.916,295,2.451]],["title/classes/LoginDto.html",[21,0.043,64,1.805]],["body/classes/LoginDto.html",[3,0.433,4,0.385,5,0.385,7,0.645,11,0.027,12,1.221,15,2.033,20,0.433,21,0.054,26,0.022,27,0.022,64,2.837,69,1.131,139,2.626,154,2.849,168,1.762,172,2.218,296,3.493,297,4.155,298,4.155]],["title/modules/PrismaModule.html",[28,1.307,193,1.978]],["body/modules/PrismaModule.html",[3,0.383,4,0.341,5,0.341,11,0.027,16,0.966,17,0.735,20,0.383,21,0.047,26,0.021,27,0.021,28,1.9,30,1.688,31,2.219,37,2.779,38,2.623,39,1.996,40,1.996,42,2.875,113,3.557,193,3.708,299,3.093,300,3.679,301,3.093,302,3.679,303,3.679]],["title/injectables/PrismaService.html",[37,1.411,50,0.665]],["body/injectables/PrismaService.html",[3,0.369,4,0.328,5,0.328,7,0.55,8,1.853,11,0.028,12,0.828,14,1.392,16,0.943,17,0.708,20,0.369,21,0.046,26,0.02,27,0.02,37,2.001,50,0.943,51,1.392,60,2.815,67,1.626,68,1.292,69,0.766,70,1.626,146,2.107,217,2.329,262,2.559,304,2.979,305,4.457,306,4.717,307,4.717,308,5.653,309,3.544,310,2.979,311,3.544,312,3.544]],["title/classes/RegisterDto.html",[21,0.043,313,2.447]],["body/classes/RegisterDto.html",[3,0.339,4,0.301,5,0.301,7,0.505,11,0.027,12,1.412,15,2.138,20,0.339,21,0.042,26,0.019,27,0.019,68,1.851,69,1.307,139,2.329,154,2.527,168,1.38,172,1.889,223,3.019,247,3.336,313,3.275,314,2.735,315,5.076,316,5.076,317,5.458,318,3.253,319,3.253,320,3.253,321,3.253,322,3.253,323,3.253,324,3.253]],["title/classes/ResetPasswordDto.html",[21,0.043,325,1.978]],["body/classes/ResetPasswordDto.html",[3,0.425,4,0.378,5,0.378,7,0.633,11,0.027,12,1.207,15,2.02,20,0.425,21,0.053,26,0.022,27,0.022,69,1.118,139,2.604,168,1.73,172,2.192,325,3.074,326,4.77,327,3.429,328,5.674,329,4.079,330,4.079]],["title/classes/UpdateBankAccountDto.html",[21,0.043,214,2.186]],["body/classes/UpdateBankAccountDto.html",[3,0.444,4,0.394,5,0.394,11,0.027,16,1.061,20,0.444,21,0.055,26,0.023,27,0.023,47,2.645,168,1.807,169,2.121,185,2.311,187,3.134,198,3.134,214,3.491,242,3.134,262,2.311,331,3.581,332,4.26,333,3.581,334,3.581,335,4.26]],["title/classes/User.html",[21,0.043,145,1.411]],["body/classes/User.html",[3,0.325,4,0.289,5,0.289,7,0.484,11,0.027,12,1.423,15,2.12,20,0.325,21,0.04,26,0.018,27,0.018,68,1.81,69,1.317,139,2.278,145,1.834,154,2.472,168,1.322,172,1.834,176,3.635,223,2.952,235,3.652,246,3.652,247,3.263,250,4.507,336,2.621,337,4.173,338,3.118,339,3.118,340,3.118,341,3.118,342,3.118,343,3.118,344,3.118,345,3.118]],["title/controllers/UserController.html",[0,1.411,346,2.186]],["body/controllers/UserController.html",[0,1.253,2,1.253,3,0.308,4,0.273,5,0.273,7,0.458,8,1.636,10,3.063,11,0.028,12,0.973,14,1.636,16,1.046,17,0.59,20,0.308,21,0.038,22,1.757,23,1.757,24,1.766,26,0.018,27,0.018,58,2.173,67,1.911,68,1.518,69,0.639,70,1.911,76,2.483,77,2.173,78,2.173,79,2.173,80,3.5,85,2.173,88,1.766,90,1.603,145,1.253,188,2.483,325,3.114,346,2.737,347,2.483,348,4.164,349,3.5,350,2.954,351,2.954,352,2.954,353,2.954,354,4.164,355,2.954,356,4.164,357,2.483,358,2.483,359,2.483,360,2.954,361,2.954,362,2.954,363,2.954,364,2.954,365,2.954,366,2.954,367,2.954,368,2.954]],["title/modules/UsersModule.html",[28,1.307,109,1.805]],["body/modules/UsersModule.html",[2,1.852,3,0.329,4,0.293,5,0.293,11,0.028,16,1.078,17,0.632,20,0.329,21,0.041,26,0.019,27,0.019,28,1.716,30,1.451,31,2.003,37,2.713,38,2.369,39,1.715,40,1.715,42,2.596,46,2.078,88,2.713,109,3.407,113,3.212,346,3.287,357,2.658,369,2.658,370,2.658,371,2.658,372,3.162,373,3.162]],["title/injectables/UsersService.html",[50,0.665,88,1.411]],["body/injectables/UsersService.html",[3,0.143,4,0.127,5,0.127,7,0.213,8,0.902,11,0.028,12,1.085,14,1.74,15,1.002,16,0.833,17,0.274,20,0.239,21,0.018,22,0.815,24,1.878,26,0.01,27,0.01,37,1.469,46,0.9,50,0.458,51,0.538,60,2.932,67,2.131,68,1.76,69,1.107,70,2.131,71,1.364,73,2.091,87,1.008,88,0.973,96,0.743,139,1.913,140,3.276,141,1.152,144,1.945,145,2.048,146,2.059,148,1.929,154,1.142,156,1.152,186,1.008,198,2.178,199,1.929,200,1.929,201,1.152,203,1.945,204,1.929,207,4.058,217,0.9,218,1.152,219,0.815,223,0.815,225,1.152,235,1.008,237,1.152,240,1.364,246,1.008,247,0.9,248,1.152,295,1.929,325,2.292,337,1.152,349,1.929,358,1.152,359,1.152,374,1.008,375,2.96,376,2.294,377,1.37,378,1.37,379,2.96,380,1.37,381,2.96,382,1.37,383,2.294,384,1.37,385,2.294,386,1.37,387,2.294,388,1.37,389,2.294,390,2.294,391,1.37,392,2.294,393,2.294,394,2.96,395,1.37,396,2.294,397,1.37,398,2.294,399,1.37,400,1.37,401,1.37,402,1.37,403,1.37,404,2.294,405,1.37,406,1.37,407,2.96,408,1.37,409,1.37,410,1.37,411,1.37,412,1.37,413,1.37,414,2.294,415,2.294,416,2.294,417,1.688,418,1.37,419,1.37,420,1.37,421,1.37,422,1.37,423,1.37,424,1.37,425,1.37,426,1.37,427,1.37,428,1.37,429,1.37,430,1.37]],["title/coverage.html",[431,3.325]],["body/coverage.html",[0,1.932,1,1.452,5,0.204,6,1.857,11,0.028,18,1.199,21,0.071,26,0.014,27,0.014,37,0.937,47,1.675,48,2.001,50,1.133,52,1.857,56,1.452,57,1.857,64,1.199,69,0.478,73,1.199,81,1.1,83,1.452,88,0.937,90,1.199,110,1.314,111,1.314,118,1.452,129,1.857,145,0.937,167,1.452,169,2.441,170,1.857,171,1.857,180,1.452,181,1.857,183,1.199,185,1.199,197,1.857,203,1.452,214,1.452,226,5.45,240,1.314,241,1.857,242,2.475,244,1.857,245,1.857,260,1.857,261,2.475,264,1.857,285,1.857,287,1.857,296,1.857,304,1.857,313,1.625,314,1.857,325,1.314,326,1.857,327,1.857,331,1.857,336,1.857,346,1.452,347,1.857,374,1.625,431,1.625,432,2.209,433,2.209,434,2.209,435,2.475,436,3.364,437,1.857,438,5.535,439,3.364,440,4.555,441,5.165,442,3.364,443,1.857,444,2.209,445,2.209,446,1.857,447,1.857,448,4.074,449,2.209,450,2.209]],["title/dependencies.html",[31,1.833,451,2.343]],["body/dependencies.html",[11,0.028,17,0.735,26,0.021,27,0.021,31,1.688,94,1.832,117,2.707,143,3.093,217,2.418,219,3.212,272,3.093,292,3.093,333,3.093,334,3.093,452,4.835,453,3.679,454,3.679,455,4.835,456,3.679,457,4.835,458,3.679,459,3.679,460,3.679,461,3.679,462,3.679,463,3.679,464,3.679,465,3.679,466,3.679,467,3.679,468,3.679,469,3.679,470,3.679,471,3.679,472,3.679]],["title/miscellaneous/enumerations.html",[473,1.279,474,3.358]],["body/miscellaneous/enumerations.html",[7,0.751,11,0.024,26,0.024,27,0.024,256,4.826,473,2.221,474,4.069,475,4.841,476,4.841,477,4.841,478,4.841]],["title/miscellaneous/functions.html",[473,1.279,479,3.358]],["body/miscellaneous/functions.html",[7,0.73,11,0.024,26,0.024,27,0.024,435,3.462,437,5.083,446,3.956,447,5.083,473,2.159,479,3.956,480,4.706,481,3.956]],["title/index.html",[7,0.432,482,2.787,483,2.787]],["body/index.html",[4,0.281,11,0.028,26,0.018,27,0.018,310,2.55,417,2.232,431,2.232,484,3.034,485,3.034,486,4.242,487,3.034,488,3.034,489,3.034,490,3.034,491,3.034,492,3.034,493,4.892,494,3.034,495,3.034,496,3.034,497,3.034,498,5.93,499,3.034,500,3.034,501,5.777,502,3.034,503,3.034,504,4.242,505,3.034,506,3.034,507,3.034,508,3.034,509,4.242,510,4.242,511,3.034,512,3.034,513,3.034,514,4.242,515,4.242,516,3.034,517,3.034,518,3.034,519,3.034,520,3.034,521,2.55,522,3.034,523,3.034,524,3.034,525,3.034,526,3.034,527,3.034,528,3.034,529,3.034,530,3.034,531,3.034,532,2.55,533,3.034,534,3.034,535,3.034,536,3.034,537,3.034,538,3.034,539,2.55]],["title/modules.html",[30,2.074]],["body/modules.html",[11,0.023,26,0.023,27,0.023,29,2.836,30,1.98,35,2.566,36,2.566,109,2.341,193,2.566,521,5.261,540,6.258,541,6.258,542,6.258]],["title/overview.html",[543,3.8]],["body/overview.html",[2,1.091,11,0.028,18,2.42,26,0.016,27,0.016,29,3.947,30,1.18,31,1.729,32,2.161,33,2.161,34,2.161,35,3.662,36,3.513,37,2.582,38,2.044,39,1.395,40,1.395,51,1.01,81,2.811,88,2.395,105,2.161,106,2.161,107,2.161,108,2.161,109,3.258,110,2.653,111,2.653,168,1.091,183,2.42,190,2.161,191,2.161,192,2.161,193,3.25,299,2.161,301,2.161,369,2.161,370,2.161,371,2.161,543,2.161,544,2.571,545,2.571,546,2.571,547,2.571]],["title/properties.html",[172,1.695,451,2.343]],["body/properties.html",[11,0.028,26,0.024,27,0.024,172,2.024,417,3.511,532,4.012,539,4.012,548,4.772,549,4.772,550,4.772]],["title/miscellaneous/typealiases.html",[473,1.279,551,3.995]],["body/miscellaneous/typealiases.html",[7,0.757,11,0.024,26,0.024,27,0.024,69,1.054,145,2.445,374,3.587,473,2.237,552,4.876,553,4.876]],["title/miscellaneous/variables.html",[473,1.279,554,3.358]],["body/miscellaneous/variables.html",[7,0.669,11,0.027,26,0.023,27,0.023,69,0.933,118,3.519,124,3.627,203,3.519,240,2.566,305,3.627,435,3.174,443,3.627,473,1.98,481,3.627,554,3.627,555,4.314,556,4.314,557,5.353,558,5.353,559,4.314]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":226,"title":{},"body":{"injectables/BankAccountService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":549,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":232,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["200",{"_index":407,"title":{},"body":{"injectables/UsersService.html":{}}}],["2b5kvdccpthbau3r5yjqsaadbh4jmg8u",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":545,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["4.9.0",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["5",{"_index":544,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":229,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["6.1.4",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.8.0",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":547,"title":{},"body":{"overview.html":{}}}],["9",{"_index":546,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["access_token",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":182,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{}}}],["account.controller",{"_index":195,"title":{},"body":{"modules/BankAccountModule.html":{}}}],["account.controller.ts",{"_index":181,"title":{},"body":{"controllers/BankAccountController.html":{},"coverage.html":{}}}],["account.dto",{"_index":187,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"classes/UpdateBankAccountDto.html":{}}}],["account.dto.ts",{"_index":242,"title":{},"body":{"classes/CreateBankAccountDto.html":{},"classes/UpdateBankAccountDto.html":{},"coverage.html":{}}}],["account.dto.ts:2",{"_index":243,"title":{},"body":{"classes/CreateBankAccountDto.html":{}}}],["account.entity.ts",{"_index":171,"title":{},"body":{"classes/BankAccount.html":{},"coverage.html":{}}}],["account.entity.ts:2",{"_index":179,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:3",{"_index":178,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.entity.ts:4",{"_index":177,"title":{},"body":{"classes/BankAccount.html":{}}}],["account.id",{"_index":236,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["account.module.ts",{"_index":194,"title":{},"body":{"modules/BankAccountModule.html":{}}}],["account.service",{"_index":184,"title":{},"body":{"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{}}}],["account.service.ts",{"_index":197,"title":{},"body":{"injectables/BankAccountService.html":{},"coverage.html":{}}}],["account.service.ts:10",{"_index":202,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.service.ts:16",{"_index":206,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.service.ts:20",{"_index":212,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account.service.ts:28",{"_index":209,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["account/bank",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"coverage.html":{}}}],["account/dto/create",{"_index":241,"title":{},"body":{"classes/CreateBankAccountDto.html":{},"coverage.html":{}}}],["account/dto/update",{"_index":331,"title":{},"body":{"classes/UpdateBankAccountDto.html":{},"coverage.html":{}}}],["account/entities/bank",{"_index":170,"title":{},"body":{"classes/BankAccount.html":{},"coverage.html":{}}}],["accountwhereuniqueinput",{"_index":213,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["action",{"_index":238,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["add_account",{"_index":375,"title":{},"body":{"injectables/UsersService.html":{}}}],["add_account(data",{"_index":378,"title":{},"body":{"injectables/UsersService.html":{}}}],["adds",{"_index":239,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["admin",{"_index":478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":552,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":522,"title":{},"body":{"index.html":{}}}],["app",{"_index":310,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":312,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":492,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":261,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guard/jwt",{"_index":188,"title":{},"body":{"controllers/BankAccountController.html":{},"controllers/UserController.html":{}}}],["authcontroller",{"_index":56,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":263,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":286,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":532,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":81,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":523,"title":{},"body":{"index.html":{}}}],["bank",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/UpdateBankAccountDto.html":{},"coverage.html":{}}}],["bank_account",{"_index":216,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["bankaccount",{"_index":167,"title":{"classes/BankAccount.html":{}},"body":{"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"coverage.html":{}}}],["bankaccountcontroller",{"_index":180,"title":{"controllers/BankAccountController.html":{}},"body":{"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"coverage.html":{}}}],["bankaccountmodule",{"_index":36,"title":{"modules/BankAccountModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BankAccountModule.html":{},"modules.html":{},"overview.html":{}}}],["bankaccountservice",{"_index":183,"title":{"injectables/BankAccountService.html":{}},"body":{"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"coverage.html":{},"overview.html":{}}}],["bcrypt",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":317,"title":{},"body":{"classes/RegisterDto.html":{}}}],["bootstrap",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":542,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":540,"title":{},"body":{"modules.html":{}}}],["building",{"_index":487,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/BankAccount.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":168,"title":{},"body":{"classes/BankAccount.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bankaccountmodule",{"_index":190,"title":{},"body":{"modules/BankAccountModule.html":{},"overview.html":{}}}],["cluster_bankaccountmodule_imports",{"_index":192,"title":{},"body":{"modules/BankAccountModule.html":{},"overview.html":{}}}],["cluster_bankaccountmodule_providers",{"_index":191,"title":{},"body":{"modules/BankAccountModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":299,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":301,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":300,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_usersmodule",{"_index":369,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":371,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":370,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["connect",{"_index":234,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["console.log('login",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["console.log(mail",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(req.user",{"_index":365,"title":{},"body":{"controllers/UserController.html":{}}}],["const",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["constants/auth.constants",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":288,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(prisma",{"_index":201,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/BankAccountController.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('bank",{"_index":189,"title":{},"body":{"controllers/BankAccountController.html":{}}}],["controller('user",{"_index":360,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":431,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":198,"title":{},"body":{"injectables/BankAccountService.html":{},"classes/UpdateBankAccountDto.html":{},"injectables/UsersService.html":{}}}],["create(data",{"_index":204,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["createaccount",{"_index":199,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["createaccount(createbankaccountdto",{"_index":208,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["createaccount(createuserdto",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["createbankaccountdto",{"_index":185,"title":{"classes/CreateBankAccountDto.html":{}},"body":{"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/UpdateBankAccountDto.html":{},"coverage.html":{}}}],["createbankaccountdto.user_id",{"_index":224,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["created_at",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":73,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.created_at",{"_index":410,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.lastname",{"_index":409,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.mail",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["createuserdto.name",{"_index":408,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["createuserdto.updated_at",{"_index":412,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.uuid",{"_index":413,"title":{},"body":{"injectables/UsersService.html":{}}}],["currency",{"_index":173,"title":{},"body":{"classes/BankAccount.html":{},"injectables/BankAccountService.html":{}}}],["data",{"_index":207,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["date",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["date.now",{"_index":227,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["de",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":500,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":186,"title":{},"body":{"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["dto/login.dto",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["dto/reset",{"_index":358,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":215,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["e2e",{"_index":511,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":488,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":306,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":307,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enumerations",{"_index":474,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["exist",{"_index":406,"title":{},"body":{"injectables/UsersService.html":{}}}],["exists",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":262,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateBankAccountDto.html":{}}}],["extractjwt",{"_index":270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":277,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":279,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findone",{"_index":200,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["findone(accountwhereuniqueinput",{"_index":210,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["findone(mail",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":486,"title":{},"body":{"index.html":{}}}],["function",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":479,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('profile",{"_index":363,"title":{},"body":{"controllers/UserController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":348,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofile(@request",{"_index":364,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofile(req",{"_index":350,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":482,"title":{"index.html":{}},"body":{}}],["grow",{"_index":518,"title":{},"body":{"index.html":{}}}],["guard/jwt",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["guard/local",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["hash",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":529,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["httpexception('identifiant",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["httpexception('user",{"_index":405,"title":{},"body":{"injectables/UsersService.html":{}}}],["https://nestjs.com",{"_index":536,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":235,"title":{},"body":{"injectables/BankAccountService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":278,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateBankAccountDto.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{}}}],["incorrecte",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":308,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":50,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":497,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":499,"title":{},"body":{"index.html":{}}}],["isadmin",{"_index":315,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isclient",{"_index":316,"title":{},"body":{"classes/RegisterDto.html":{}}}],["join",{"_index":525,"title":{},"body":{"index.html":{}}}],["jour",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["json.parse",{"_index":414,"title":{},"body":{"injectables/UsersService.html":{}}}],["json.stringify",{"_index":415,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwt",{"_index":272,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":90,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":276,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":110,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":533,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["license",{"_index":539,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":515,"title":{},"body":{"index.html":{}}}],["literal",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["local",{"_index":292,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":83,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":111,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":64,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["mail",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["main",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["mis",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":473,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":514,"title":{},"body":{"index.html":{}}}],["mode",{"_index":504,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":528,"title":{},"body":{"index.html":{}}}],["mot",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{}}}],["myśliwiec",{"_index":534,"title":{},"body":{"index.html":{}}}],["name",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":493,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":538,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":333,"title":{},"body":{"classes/UpdateBankAccountDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":240,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_password",{"_index":328,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["node.js",{"_index":485,"title":{},"body":{"index.html":{}}}],["npm",{"_index":498,"title":{},"body":{"index.html":{}}}],["null",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["num_account",{"_index":174,"title":{},"body":{"classes/BankAccount.html":{},"injectables/BankAccountService.html":{}}}],["number",{"_index":176,"title":{},"body":{"classes/BankAccount.html":{},"classes/User.html":{}}}],["object",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":516,"title":{},"body":{"index.html":{}}}],["optional",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overdraft_limit",{"_index":231,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["overview",{"_index":543,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":451,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["partialtype",{"_index":332,"title":{},"body":{"classes/UpdateBankAccountDto.html":{}}}],["partialtype(createbankaccountdto",{"_index":335,"title":{},"body":{"classes/UpdateBankAccountDto.html":{}}}],["pass",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["passe",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["passport",{"_index":219,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":273,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":274,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["password.dto",{"_index":359,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["password.dto.ts",{"_index":327,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:2",{"_index":329,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:3",{"_index":330,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["payload",{"_index":269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":282,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":284,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment_ceiling",{"_index":230,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["peut_posseder",{"_index":397,"title":{},"body":{"injectables/UsersService.html":{}}}],["please",{"_index":526,"title":{},"body":{"index.html":{}}}],["post",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/UserController.html":{}}}],["post('login",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset_password",{"_index":354,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/UserController.html":{}}}],["prisma",{"_index":203,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.bank_accountcreateinput",{"_index":205,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["prisma.bank_accountwhereuniqueinput",{"_index":211,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["prisma.peut_possedercreateinput",{"_index":379,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.service",{"_index":303,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.usercreateinput",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userupdateinput",{"_index":401,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereinput",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userwhereuniqueinput",{"_index":400,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/.../seed.ts",{"_index":481,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":217,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":196,"title":{},"body":{"modules/BankAccountModule.html":{}}}],["prisma/prisma.service",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"injectables/BankAccountService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["prisma/seed.ts",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":305,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":193,"title":{"modules/PrismaModule.html":{}},"body":{"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":37,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BankAccountService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{}}}],["production",{"_index":506,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":484,"title":{},"body":{"index.html":{}}}],["project",{"_index":517,"title":{},"body":{"index.html":{}}}],["promise",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["promise.all",{"_index":222,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["properties",{"_index":172,"title":{"properties.html":{}},"body":{"classes/BankAccount.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"properties.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["rank",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["rankenum",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{}}}],["rankenum.client",{"_index":411,"title":{},"body":{"injectables/UsersService.html":{}}}],["read",{"_index":527,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"injectables/BankAccountService.html":{},"controllers/UserController.html":{}}}],["reflect",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(createuserdto",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":313,"title":{"classes/RegisterDto.html":{}},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["repository",{"_index":496,"title":{},"body":{"index.html":{}}}],["req",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["req.user",{"_index":366,"title":{},"body":{"controllers/UserController.html":{}}}],["request",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":349,"title":{},"body":{"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["resetpassword(@body",{"_index":367,"title":{},"body":{"controllers/UserController.html":{}}}],["resetpassword(resetpassworddto",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["resetpassword(resetpasswordrequestdto",{"_index":353,"title":{},"body":{"controllers/UserController.html":{}}}],["resetpassworddto",{"_index":325,"title":{"classes/ResetPasswordDto.html":{}},"body":{"classes/ResetPasswordDto.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["resetpassworddto.mail",{"_index":419,"title":{},"body":{"injectables/UsersService.html":{}}}],["resetpassworddto.new_password",{"_index":421,"title":{},"body":{"injectables/UsersService.html":{}}}],["resetpasswordrequestdto",{"_index":356,"title":{},"body":{"controllers/UserController.html":{}}}],["result",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":501,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":489,"title":{},"body":{"index.html":{}}}],["secret",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":280,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":490,"title":{},"body":{"index.html":{}}}],["side",{"_index":491,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateBankAccountDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":520,"title":{},"body":{"index.html":{}}}],["src/.../auth.constants.ts",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rank.enum.ts",{"_index":475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.service.ts",{"_index":553,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants/auth.constants.ts",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":296,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:2",{"_index":297,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:3",{"_index":298,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":314,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:2",{"_index":322,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:3",{"_index":320,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:4",{"_index":321,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:5",{"_index":323,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:6",{"_index":324,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:7",{"_index":318,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:8",{"_index":319,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/guard/jwt",{"_index":260,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/local",{"_index":285,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":264,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:17",{"_index":268,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:8",{"_index":266,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/local.strategy.ts",{"_index":287,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/local.strategy.ts:11",{"_index":291,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategy/local.strategy.ts:6",{"_index":289,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/bank",{"_index":169,"title":{},"body":{"classes/BankAccount.html":{},"controllers/BankAccountController.html":{},"modules/BankAccountModule.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/UpdateBankAccountDto.html":{},"coverage.html":{}}}],["src/enums/rank.enum.ts",{"_index":476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":302,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":304,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:8",{"_index":309,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/dto/create",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/reset",{"_index":326,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":336,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":339,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":342,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":340,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":341,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":343,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":345,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":338,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":344,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.controller.ts",{"_index":347,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/users/user.controller.ts:18",{"_index":352,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/user.controller.ts:24",{"_index":355,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.module.ts",{"_index":372,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":374,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/users.service.ts:10",{"_index":377,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:13",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:18",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":380,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:64",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:87",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":502,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":505,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":507,"title":{},"body":{"index.html":{}}}],["started",{"_index":483,"title":{"index.html":{}},"body":{}}],["starter",{"_index":495,"title":{},"body":{"index.html":{}}}],["statements",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":416,"title":{},"body":{"injectables/UsersService.html":{}}}],["stay",{"_index":530,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":271,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["successfuly",{"_index":418,"title":{},"body":{"injectables/UsersService.html":{}}}],["super",{"_index":275,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":521,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":541,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":510,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":513,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":512,"title":{},"body":{"index.html":{}}}],["tests",{"_index":509,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":519,"title":{},"body":{"index.html":{}}}],["this.$on('beforeexit",{"_index":311,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(createuserdto",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(mail",{"_index":294,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.create",{"_index":225,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["this.jwtservice.sign(user",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.bank_account.create",{"_index":220,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["this.prisma.bank_account.findfirst",{"_index":221,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["this.prisma.peut_posseder.create",{"_index":403,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.create",{"_index":399,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findfirst",{"_index":398,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":402,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.update",{"_index":420,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.user",{"_index":404,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersprovider.resetpassword(resetpasswordrequestdto",{"_index":368,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.add_account",{"_index":233,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["this.usersservice.createaccount",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(logindto.mail",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(mail",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.user",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{}}}],["throw",{"_index":295,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":531,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":537,"title":{},"body":{"index.html":{}}}],["type",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BankAccount.html":{},"injectables/BankAccountService.html":{},"classes/CreateBankAccountDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":551,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":334,"title":{},"body":{"classes/UpdateBankAccountDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":494,"title":{},"body":{"index.html":{}}}],["ui",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":293,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":508,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":550,"title":{},"body":{"properties.html":{}}}],["update",{"_index":376,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(params",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["update_at",{"_index":337,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["updatebankaccountdto",{"_index":214,"title":{"classes/UpdateBankAccountDto.html":{}},"body":{"injectables/BankAccountService.html":{},"classes/UpdateBankAccountDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["use",{"_index":218,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["useguards",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BankAccountController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthguard",{"_index":362,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":351,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(localauthguard",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":145,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user(userwereinput",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.controller",{"_index":373,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.dto",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:2",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:3",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:4",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":237,"title":{},"body":{"injectables/BankAccountService.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":175,"title":{},"body":{"classes/BankAccount.html":{},"classes/CreateBankAccountDto.html":{}}}],["usercontroller",{"_index":346,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userid",{"_index":281,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["username",{"_index":283,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["users.service",{"_index":357,"title":{},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{}}}],["users/dto/create",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/users.module",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"modules/BankAccountModule.html":{}}}],["users/users.service",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{}}}],["usersmodule",{"_index":109,"title":{"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersprovider",{"_index":361,"title":{},"body":{"controllers/UserController.html":{}}}],["usersservice",{"_index":88,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BankAccountService.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userwereinput",{"_index":396,"title":{},"body":{"injectables/UsersService.html":{}}}],["uuid",{"_index":223,"title":{},"body":{"injectables/BankAccountService.html":{},"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["validate",{"_index":265,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(mail",{"_index":290,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(mail",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":554,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":548,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":503,"title":{},"body":{"index.html":{}}}],["website",{"_index":535,"title":{},"body":{"index.html":{}}}],["withdrawal_limit",{"_index":228,"title":{},"body":{"injectables/BankAccountService.html":{}}}],["world",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":524,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BankAccountModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBankAccountModule\n\nBankAccountModule\n\nAppModule -->\n\nBankAccountModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BankAccountModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { BankAccountModule } from './bank-account/bank-account.module';\n\n@Module({\n  imports: [AuthModule, BankAccountModule],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Request,\n  Controller,\n  Post,\n  UseGuards,\n  Get,\n  Body,\n  Req,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './guard/local-auth.guard';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\nimport { UsersService } from '../users/users.service';\nimport { JwtAuthGuard } from './guard/jwt-auth.guard';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from '@nestjs/passport';\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n  ) {}\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Body() loginDto: LoginDto) {\n    console.log('login', loginDto);\n    return this.authService.login(loginDto);\n  }\n  @Post('register')\n  register(@Body() createUserDto: CreateUserDto) {\n    return this.authService.register(createUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants/auth.constants';\nimport { LocalStrategy } from './strategy/local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtStrategy } from './strategy/jwt.strategy';\n@Module({\n  controllers: [AuthController],\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(mail: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\nimport * as bcrypt from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async register(createUserDto: CreateUserDto) {\n    const user = await this.usersService.user({\n      mail: createUserDto.mail,\n    });\n    if (user) {\n      return {\n        message: 'User already exists',\n      };\n    } else {\n      // salt and hash password\n      const salt = await bcrypt.genSalt();\n      createUserDto.password = await bcrypt.hash(createUserDto.password, salt);\n      return this.usersService.createAccount({ ...createUserDto });\n    }\n  }\n\n  async validateUser(mail: string, pass: string): Promise {\n    const user = await this.usersService.findOne(mail);\n    if (user && (await bcrypt.compare(pass, user.password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(loginDto: LoginDto) {\n    console.log('login');\n    const user = await this.usersService.findOne(loginDto.mail);\n    return {\n      access_token: this.jwtService.sign(user),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BankAccount.html":{"url":"classes/BankAccount.html","title":"class - BankAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BankAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-account/entities/bank-account.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                num_account\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/bank-account/entities/bank-account.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        num_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/bank-account/entities/bank-account.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/bank-account/entities/bank-account.entity.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BankAccount {\n  user_id: string;\n  num_account: number;\n  currency: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BankAccountController.html":{"url":"controllers/BankAccountController.html","title":"controller - BankAccountController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BankAccountController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-account/bank-account.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bank-account\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Get } from '@nestjs/common';\nimport { BankAccountService } from './bank-account.service';\nimport { CreateBankAccountDto } from './dto/create-bank-account.dto';\nimport { JwtAuthGuard } from '../auth/guard/jwt-auth.guard';\n\n@Controller('bank-account')\nexport class BankAccountController {\n  constructor(private readonly bankAccountService: BankAccountService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BankAccountModule.html":{"url":"modules/BankAccountModule.html","title":"module - BankAccountModule","body":"\n                   \n\n\n\n\n    Modules\n    BankAccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BankAccountModule\n\n\n\ncluster_BankAccountModule_providers\n\n\n\ncluster_BankAccountModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nBankAccountModule\n\nBankAccountModule\n\nBankAccountModule -->\n\nPrismaModule->BankAccountModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nBankAccountModule -->\n\nUsersModule->BankAccountModule\n\n\n\n\n\nBankAccountService\n\nBankAccountService\n\nBankAccountModule -->\n\nBankAccountService->BankAccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bank-account/bank-account.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BankAccountService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BankAccountController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BankAccountService } from './bank-account.service';\nimport { BankAccountController } from './bank-account.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  controllers: [BankAccountController],\n  imports: [PrismaModule, UsersModule],\n  providers: [BankAccountService],\n})\nexport class BankAccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BankAccountService.html":{"url":"injectables/BankAccountService.html","title":"injectable - BankAccountService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BankAccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-account/bank-account.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createAccount\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/bank-account/bank-account.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Prisma.bank_accountCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/bank-account/bank-account.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.bank_accountCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAccount(createBankAccountDto: CreateBankAccountDto)\n                \n            \n\n\n            \n                \n                    Defined in src/bank-account/bank-account.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createBankAccountDto\n                                    \n                                                CreateBankAccountDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(accountWhereUniqueInput: Prisma.bank_accountWhereUniqueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/bank-account/bank-account.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountWhereUniqueInput\n                                    \n                                            Prisma.bank_accountWhereUniqueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBankAccountDto } from './dto/create-bank-account.dto';\nimport { UpdateBankAccountDto } from './dto/update-bank-account.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { bank_account, Prisma } from '@prisma/client';\nimport { UsersService } from '../users/users.service';\nimport { use } from 'passport';\n\n@Injectable()\nexport class BankAccountService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  async create(data: Prisma.bank_accountCreateInput): Promise {\n    return this.prisma.bank_account.create({ data });\n  }\n\n  async findOne(\n    accountWhereUniqueInput: Prisma.bank_accountWhereUniqueInput,\n  ): Promise {\n    return this.prisma.bank_account.findFirst({\n      where: accountWhereUniqueInput,\n    });\n  }\n\n  async createAccount(createBankAccountDto: CreateBankAccountDto) {\n    const [user, account] = await Promise.all([\n      this.usersService.user({\n        uuid: createBankAccountDto.user_id,\n      }),\n      this.create({\n        currency: 0,\n        num_account: Date.now(),\n        withdrawal_limit: 500,\n        payment_ceiling: 500,\n        overdraft_limit: 100,\n      }),\n    ]);\n\n    await this.usersService.add_account({\n      bank_account: {\n        connect: {\n          id: account.id,\n        },\n      },\n      user: {\n        connect: {\n          id: user.id,\n        },\n      },\n    });\n\n    return 'This action adds a new bankAccount';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBankAccountDto.html":{"url":"classes/CreateBankAccountDto.html","title":"class - CreateBankAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBankAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-account/dto/create-bank-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/bank-account/dto/create-bank-account.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBankAccountDto {\n  user_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                lastname\n                            \n                            \n                                mail\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                rank\n                            \n                            \n                                updated_at\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rank\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RankEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  name: string;\n  lastname: string;\n  mail: string;\n  password: string;\n  uuid: string;\n  created_at: Date;\n  updated_at: Date;\n  rank: RankEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants/auth.constants';\nimport { LoginDto } from '../dto/login.dto';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/local.strategy.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(mail: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/local.strategy.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(mail: string, password: string): Promise {\n    const user = await this.authService.validateUser(mail, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto {\n  mail: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isadmin\n                            \n                            \n                                isclient\n                            \n                            \n                                lastname\n                            \n                            \n                                mail\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isadmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isclient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterDto {\n  name: string;\n  lastname: string;\n  mail: string;\n  password: string;\n  uuid: string;\n  isadmin: boolean;\n  isclient: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mail\n                            \n                            \n                                new_password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/reset-password.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new_password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/reset-password.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResetPasswordDto {\n  mail: string;\n  new_password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBankAccountDto.html":{"url":"classes/UpdateBankAccountDto.html","title":"class - UpdateBankAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBankAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bank-account/dto/update-bank-account.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateBankAccountDto } from './create-bank-account.dto';\n\nexport class UpdateBankAccountDto extends PartialType(CreateBankAccountDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                id\n                            \n                            \n                                lastname\n                            \n                            \n                                mail\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                update_at\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: number;\n  name: string;\n  lastname: string;\n  mail: string;\n  password: string;\n  uuid: string;\n  created_at: Date;\n  update_at: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/users/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(resetPasswordRequestDto: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset_password')\n                \n            \n\n            \n                \n                    Defined in src/users/user.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPasswordRequestDto\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Request,\n  Controller,\n  Post,\n  UseGuards,\n  Get,\n  Body,\n} from '@nestjs/common';\nimport { JwtAuthGuard } from '../auth/guard/jwt-auth.guard';\nimport { UsersService } from './users.service';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly usersProvider: UsersService) {}\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    console.log(req.user);\n    return req.user;\n  }\n\n  @Post('reset_password')\n  resetPassword(@Body() resetPasswordRequestDto: ResetPasswordDto) {\n    return this.usersProvider.resetPassword(resetPasswordRequestDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nPrismaService  -->\n\nUsersModule->PrismaService \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UserController } from './user.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [UserController],\n  providers: [UsersService, PrismaService],\n  exports: [UsersService, PrismaService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add_account\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createAccount\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        add_account\n                        \n                    \n                \n            \n            \n                \n                    \n                    add_account(data: Prisma.peut_possederCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.peut_possederCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: Prisma.userCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.userCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAccount(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(resetPasswordDto: ResetPasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPasswordDto\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(params: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user\n                        \n                    \n                \n            \n            \n                \n                    \n                    user(userWereInput: Prisma.userWhereInput)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userWereInput\n                                    \n                                            Prisma.userWhereInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { peut_posseder, Prisma, user } from '@prisma/client';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { use } from 'passport';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\n\nexport type User = any;\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async user(userWereInput: Prisma.userWhereInput): Promise {\n    return this.prisma.user.findFirst({\n      where: userWereInput,\n    });\n  }\n  async create(data: Prisma.userCreateInput): Promise {\n    return this.prisma.user.create({ data });\n  }\n\n  async update(params: {\n    where: Prisma.userWhereUniqueInput;\n    data: Prisma.userUpdateInput;\n  }): Promise {\n    const { where, data } = params;\n    return this.prisma.user.update({\n      data,\n      where,\n    });\n  }\n\n  async add_account(\n    data: Prisma.peut_possederCreateInput,\n  ): Promise {\n    return this.prisma.peut_posseder.create({ data });\n  }\n\n  async createAccount(createUserDto: CreateUserDto) {\n    const user = await this.user({ mail: createUserDto.mail });\n\n    if (user) {\n      throw new HttpException('User exist', 200);\n    }\n\n    await this.create({\n      name: createUserDto.name,\n      lastname: createUserDto.lastname,\n      mail: createUserDto.mail,\n      created_at: createUserDto.created_at,\n      Rank: RankEnum.CLIENT,\n      password: createUserDto.password,\n      update_at: createUserDto.updated_at,\n      uuid: createUserDto.uuid,\n    });\n    return JSON.parse(\n      JSON.stringify({\n        statusCode: 200,\n        description: 'Create user successfuly',\n      }),\n    );\n  }\n\n  async resetPassword(resetPasswordDto: ResetPasswordDto) {\n    const user = await this.user({ mail: resetPasswordDto.mail });\n    if (user) {\n      await this.update({\n        data: {\n          password: resetPasswordDto.new_password,\n        },\n        where: {\n          id: user.id,\n        },\n      });\n\n      return JSON.parse(\n        JSON.stringify({\n          statusCode: 200,\n          description: 'Mot de passe mis à jour',\n        }),\n      );\n    }\n\n    throw new HttpException('Identifiant incorrecte', 401);\n  }\n\n  async findOne(mail: string): Promise {\n    console.log(mail);\n    return this.prisma.user.findFirst({\n      where: {\n        mail: mail,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/constants/auth.constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/bank-account/bank-account.controller.ts\n            \n            controller\n            BankAccountController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bank-account/bank-account.service.ts\n            \n            injectable\n            BankAccountService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/bank-account/dto/create-bank-account.dto.ts\n            \n            class\n            CreateBankAccountDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/bank-account/dto/update-bank-account.dto.ts\n            \n            class\n            UpdateBankAccountDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bank-account/entities/bank-account.entity.ts\n            \n            class\n            BankAccount\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.2.1\n        \n            @nestjs/core : ^9.2.1\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.4\n        \n            @prisma/client : ^4.9.0\n        \n            bcrypt : ^5.1.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.0\n        \n            swagger-ui-express : ^4.6.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RankEnum   (src/.../rank.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/enums/rank.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RankEnum\n                    \n                \n                        \n                            \n                                 CLIENT\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (prisma/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BankAccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BankAccountModule\n\n\n\ncluster_BankAccountModule_imports\n\n\n\ncluster_BankAccountModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nBankAccountModule\n\nBankAccountModule\n\nAppModule -->\n\nBankAccountModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nBankAccountModule -->\n\nUsersModule->BankAccountModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nUsersModule->PrismaService \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\nBankAccountModule -->\n\nPrismaModule->BankAccountModule\n\n\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nBankAccountService\n\nBankAccountService\n\nBankAccountModule -->\n\nBankAccountService->BankAccountModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwtConstants   (src/.../auth.constants.ts)\n                        \n                        \n                            prisma   (prisma/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/constants/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: '2B5KVdCCPthBaU3R5yJQsAADbH4jmG8u',\n}\n                    \n                \n\n\n        \n    \n\n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
